#!/usr/bin/env perl
use strict;
use warnings;
use 5.010;

use DBI;
use Encode;
use FindBin qw($Bin);
use Getopt::Long;

use lib "$Bin";
use Helper qw($dbh get_options db_connect timestamp_to_unix convert_time);

my %opt;
GetOptions(\%opt, 'dump=s', 'posts:i', 'quota:i', 'limit:i');
$opt{dump} //= '/home/bbs/etc/posts/day';
$opt{posts} //= 5000;
$opt{quota} //= 1;
$opt{limit} //= 10;

get_options();
db_connect();

main();

$dbh->disconnect();

sub main
{
	my $posts = load_recent_posts();
	my $boards = load_boards();
	my $threads = post_stat($boards, $posts);

	clear_result();
	my $hot_topics = insert_results($boards, $threads);
	dump_result($boards, $hot_topics);
}

sub dump_result
{
	my ($boards, $hot_topics) = @_;
	open my $fh, '>', $opt{dump} or die;

	print $fh "                \033[1;34m-----\033[37m=====\033[41m"
		. " 本日十大热门话题 \033[40m=====\033[34m-----\033[m\n\n";
	my $index = 0;
	for (@$hot_topics) {
		my ($tid, $score, $bid, $last, $uid, $uname, $title) = @$_;
		$last = substr $last, 0, 15;
		$title =~ s/\033\[.*?m//g;
		$title = encode('gbk', decode('utf8', $title));

		my $str = sprintf "\033[1;37m第\033[31m%3u\033[37m 名 \033[37m信区 : \033[33m"
			. "%-18s\033[37m〖 \033[32m%s\033[37m 〗\033[36m%4d \033[37m篇"
			. "\033[33m%13.13s\n     \033[37m标题 : \033[1;44m%-60.60s\033[40m\n",
			++$index, $boards->{$bid}{name}, $last, $score, $uname, $title;
		print $fh $str;
	}

	close $fh;
}

sub insert_results
{
	my ($boards, $threads) = @_;

	my @tids = keys %$threads;
	@tids = sort { $threads->{$b}{score} <=> $threads->{$a}{score} } @tids;

	my @hot_topics;
	my %board;
	my $count = 0;
	for my $tid (@tids) {
		my ($bid, $last, $score) = @{$threads->{$tid}}{qw(board last score)};
		next if excluded($boards, $bid);
		if (not exists $board{$bid} or $board{$bid} < $opt{quota}) {
			my ($uid, $uname, $title) = load_post_info($tid);
			if (defined $uid) {
				my @info = ($tid, $score, $bid, $last, $uid, $uname, $title, $boards->{$bid}{name});
				insert_hot_topic(@info);
				$board{$bid}++;
				push @hot_topics, \@info;
				last if (++$count >= $opt{limit});
			}
		}
	}
	$dbh->commit;
	return \@hot_topics;
}

sub excluded
{
	my $BOARD_DIR_FLAG = 0x200;
	my $BOARD_POST_FLAG = 0x100;
	my $BOARD_JUNK_FLAG = 0x20;
	my $flags = ($BOARD_DIR_FLAG | $BOARD_POST_FLAG | $BOARD_JUNK_FLAG);

	my ($boards, $bid) = @_;
	my $board = $boards->{$bid};
	return ($board->{perm} or ($board->{flag} & $flags));
}

sub insert_hot_topic
{
	$_[3] = convert_time($_[3]);
	my $sql = <<SQL;
INSERT INTO posts.hot (tid, score, board, last_stamp, owner, uname, title, bname)
	VALUES (?, ?, ?, ?, ?, ?, ?, ?)
SQL
	$dbh->do($sql, {}, @_) or die $!;
}

sub load_post_info
{
	my $tid = shift;
	$dbh->selectrow_array(
		'SELECT owner, uname, title FROM posts.recent WHERE id = ?', {}, $tid);
}

sub clear_result
{
	$dbh->do("DELETE FROM posts.hot");
}

sub post_stat
{
	my ($boards, $posts) = @_;
	my $threads = {};
	for (@$posts) {
		my ($id, $tid, $board, $stamp) = @$_;
		if (exists $threads->{$tid}) {
			$threads->{$tid}{score}++;
		} else {
			$threads->{$tid} = {
				score => 1,
				last => $stamp,
				board => $board,
			}
		}
	}
	$threads;
}

sub load_boards
{
	my $array = $dbh->selectall_arrayref('SELECT id, name, flag, perm FROM boards');
	my %hash = map { $_->[0] => {
		name => $_->[1], flag => $_->[2], perm => $_->[3]
		} } @$array;
	\%hash;
}

sub load_recent_posts
{
	my $last = 0;
	my $end = 0;
	my $limit = $opt{posts};
	my $oldest = time - 86400;
	my @posts;

	do {
		my $posts = load_posts_before($last, $limit);
		$end = 1 if (@$posts < $limit);

		for (@$posts) {
			my ($id, $tid, $board, $stamp) = @$_;
			$stamp = timestamp_to_unix($stamp);
			if ($stamp <= $oldest) {
				$end = 1;
				last;
			} else {
				my @t = ($id, $tid, $board, $stamp);
				push @posts, \@t;
			}
			$last = $id;
		}
	} while (not $end);
	\@posts;
}

sub load_posts_before
{
	my ($id, $limit) = @_;

	my $sql = 'SELECT id, tid, board, stamp FROM posts.recent';
	$sql .= " WHERE id < $id" if ($id);
	$sql .= " ORDER BY id DESC LIMIT $limit";

	$dbh->selectall_arrayref($sql);
}
